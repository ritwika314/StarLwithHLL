
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xe5\xca\xab\xf3\xa4\x0fZqU2\x86\x05\xfb\xcb\x82\x8f'
    
_lr_action_items = {'LID':([9,10,13,15,16,17,18,20,33,39,56,57,59,64,66,71,77,87,95,97,98,104,110,111,112,115,116,117,118,119,121,122,123,125,126,127,132,134,137,139,141,144,145,146,147,148,149,150,151,152,153,155,158,161,162,163,164,166,167,168,169,188,197,198,209,211,214,216,219,220,221,222,224,225,227,229,234,235,237,239,241,],[-96,-95,27,27,27,-92,-93,-94,27,27,27,27,27,-6,27,27,-7,-11,27,27,-8,27,27,-9,27,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,27,-40,-37,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-53,27,-54,-64,-42,-49,27,27,-63,27,-62,-51,-50,-48,27,-46,-57,-47,-55,-52,27,-56,]),'OBSTACLELIST':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[9,9,9,9,9,9,9,-72,-74,-65,-78,-73,-79,-75,]),'RETURN':([97,115,116,117,118,119,121,122,123,125,126,127,132,134,168,169,188,197,198,209,216,220,221,222,224,225,227,229,234,235,237,239,241,],[112,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,112,-40,-37,-53,112,-54,-64,-42,-49,-63,-62,-51,-50,-48,112,-46,-57,-47,-55,-52,112,-56,]),'LOG':([97,115,116,117,118,119,121,122,123,125,126,127,132,134,168,169,188,197,198,209,216,220,221,222,224,225,227,229,234,235,237,239,241,],[113,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,113,-40,-37,-53,113,-54,-64,-42,-49,-63,-62,-51,-50,-48,113,-46,-57,-47,-55,-52,113,-56,]),'CID':([4,9,10,13,15,16,17,18,20,33,39,56,57,59,64,66,71,77,87,95,97,98,104,110,111,112,115,116,117,118,119,121,122,123,125,126,127,132,134,137,139,141,144,145,146,147,148,149,150,151,152,153,155,158,161,162,163,164,166,167,168,169,188,197,198,209,211,214,216,219,220,221,222,224,225,227,229,234,235,237,239,241,],[7,-96,-95,28,28,28,-92,-93,-94,28,28,28,28,28,-6,28,28,-7,-11,28,28,-8,28,28,-9,28,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,28,-40,-37,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-53,28,-54,-64,-42,-49,28,28,-63,28,-62,-51,-50,-48,28,-46,-57,-47,-55,-52,28,-56,]),'ITEMPOSITION':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[10,10,10,10,10,10,10,-72,-74,-65,-78,-73,-79,-75,]),'DOREACHAVOID':([97,115,116,117,118,119,121,122,123,125,126,127,132,134,168,169,188,197,198,209,216,220,221,222,224,225,227,229,234,235,237,239,241,],[114,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,114,-40,-37,-53,114,-54,-64,-42,-49,-63,-62,-51,-50,-48,114,-46,-57,-47,-55,-52,114,-56,]),'FNUM':([37,53,95,104,110,112,137,139,144,145,146,147,148,149,150,151,152,153,155,162,166,167,211,219,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ROBOT':([59,64,66,77,87,98,111,],[65,-6,65,-7,-11,-8,-9,]),'LCURLY':([6,27,28,30,54,81,83,93,136,213,238,],[23,-97,-98,39,59,86,88,97,169,225,239,]),'REMOVE':([97,115,116,117,118,119,121,122,123,125,126,127,132,134,168,169,188,197,198,209,216,220,221,222,224,225,227,229,234,235,237,239,241,],[130,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,130,-40,-37,-53,130,-54,-64,-42,-49,-63,-62,-51,-50,-48,130,-46,-57,-47,-55,-52,130,-56,]),'BR':([2,],[4,]),'MSG':([97,115,116,117,118,119,121,122,123,125,126,127,132,134,168,169,188,197,198,209,216,220,221,222,224,225,227,229,234,235,237,239,241,],[128,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,128,-40,-37,-53,128,-54,-64,-42,-49,-63,-62,-51,-50,-48,128,-46,-57,-47,-55,-52,128,-56,]),'EXIT':([59,64,66,77,87,97,98,111,115,116,117,118,119,121,122,123,125,126,127,132,134,168,169,188,197,198,209,216,220,221,222,224,225,227,229,234,235,237,239,241,],[67,-6,67,-7,-11,135,-8,-9,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,135,-40,-37,-53,135,-54,-64,-42,-49,-63,-62,-51,-50,-48,135,-46,-57,-47,-55,-52,135,-56,]),'NULL':([37,53,95,104,110,112,137,139,144,145,146,147,148,149,150,151,152,153,155,162,166,167,211,219,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'TRUE':([37,53,95,104,110,112,137,139,144,145,146,147,148,149,150,151,152,153,155,162,166,167,211,219,],[49,49,100,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'MINUS':([27,28,44,46,47,48,49,100,105,106,109,143,154,156,176,177,178,179,180,181,182,183,184,185,186,187,199,200,203,223,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,152,-86,152,152,152,-91,152,152,-90,-89,152,152,-87,152,-88,152,152,-86,152,152,152,]),'NEQ':([27,28,44,46,47,48,49,100,105,106,109,143,176,179,180,183,185,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,153,-86,153,-91,-90,-89,-87,-88,]),'PRE':([86,88,],[91,91,]),'GEQ':([27,28,44,46,47,48,49,100,105,106,109,143,176,179,180,183,185,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,144,-86,144,-91,-90,-89,-87,-88,]),'LE':([27,28,44,46,47,48,49,100,105,106,109,143,176,179,180,183,185,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,145,-86,145,-91,-90,-89,-87,-88,]),'RPAREN':([27,28,42,44,46,47,48,49,73,74,76,85,99,100,101,103,105,106,107,108,109,142,143,154,157,167,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,193,194,196,202,203,204,205,207,217,223,226,230,],[-97,-98,54,-83,-81,-80,-84,-82,81,82,83,89,138,140,-14,-23,-85,-15,-16,-22,-86,175,176,-20,190,-71,-18,-19,207,-21,-91,-26,-29,-90,-89,-27,-28,-87,-24,-88,-25,176,208,210,212,213,215,218,-60,-59,-58,-17,228,231,233,-61,]),'SEMI':([27,28,29,31,41,44,45,46,47,48,49,58,68,79,82,89,105,109,135,138,140,156,165,176,179,180,183,185,190,199,200,208,210,212,215,218,228,231,233,],[-97,-98,38,40,52,-83,55,-81,-80,-84,-82,62,77,84,87,-10,-85,-86,168,171,173,188,197,-91,-90,-89,-87,-88,209,-86,216,221,222,224,227,229,234,235,237,]),'RCURLY':([8,11,12,14,19,23,24,25,26,27,28,32,36,38,40,50,51,52,55,59,60,62,64,66,69,70,75,77,84,87,94,96,97,98,111,115,116,117,118,119,120,121,122,123,124,125,126,127,132,134,159,160,168,169,188,197,198,206,209,216,220,221,222,224,225,227,229,232,234,235,237,239,240,241,],[-71,-71,-71,-70,-71,-71,-66,-69,-67,-97,-98,-68,43,-72,-74,-77,57,-78,-73,-71,-76,-79,-6,-71,78,-5,-4,-7,-75,-11,98,111,-71,-8,-9,-35,-36,-41,-43,-45,159,-33,-34,-39,-32,-44,-38,-71,-40,-37,-30,-31,-53,-71,-54,-64,-42,220,-49,-63,-62,-51,-50,-48,-71,-46,-57,236,-47,-55,-52,-71,241,-56,]),'AGENT':([0,],[2,]),'BY':([27,28,44,46,47,48,49,100,105,106,109,143,154,156,176,177,178,179,180,181,182,183,184,185,186,187,199,200,203,223,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,146,-86,146,146,146,-91,146,146,-90,-89,146,146,146,146,146,146,146,-86,146,146,146,]),'INIT':([5,8,11,12,14,19,22,24,25,26,32,38,40,43,52,55,62,84,],[-71,-71,-71,-71,-70,-71,35,-66,-69,-67,-68,-72,-74,-65,-78,-73,-79,-75,]),'PLUS':([27,28,44,46,47,48,49,100,105,106,109,143,154,156,176,177,178,179,180,181,182,183,184,185,186,187,199,200,203,223,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,150,-86,150,150,150,-91,150,150,-90,-89,150,150,-87,150,-88,150,150,-86,150,150,150,]),'COMMA':([27,28,44,46,47,48,49,50,105,109,176,179,180,183,185,192,195,203,],[-97,-98,-83,-81,-80,-84,-82,56,-85,-86,-91,-90,-89,-87,-88,211,214,219,]),'$end':([1,34,78,],[0,-1,-3,]),'FAILFLAG':([95,104,137,139,157,162,],[103,103,103,103,189,103,]),'GETMYPOS':([72,],[80,]),'ENUM':([5,8,11,12,19,23,38,40,43,52,55,62,84,],[15,15,15,15,15,15,-72,-74,-65,-78,-73,-79,-75,]),'INCR':([27,28,133,],[-97,-98,165,]),'TIMES':([27,28,44,46,47,48,49,100,105,106,109,143,154,156,176,177,178,179,180,181,182,183,184,185,186,187,199,200,203,223,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,147,-86,147,147,147,-91,147,147,-90,-89,147,147,147,147,147,147,147,-86,147,147,147,]),'GETINPUT':([166,],[201,]),'GE':([27,28,44,46,47,48,49,100,105,106,109,143,176,179,180,183,185,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,149,-86,149,-91,-90,-89,-87,-88,]),'EQLS':([27,28,29,41,61,63,133,],[-97,-98,37,53,71,72,166,]),'LPAREN':([27,28,35,63,65,67,80,91,95,102,104,110,112,113,114,128,129,130,131,133,137,139,144,145,146,147,148,149,150,151,152,153,155,162,166,167,199,201,211,219,],[-97,-98,42,73,74,76,85,95,104,141,104,155,155,157,158,161,162,163,164,167,104,104,155,155,155,155,155,155,155,155,155,155,155,104,155,155,167,217,155,155,]),'ELSE':([236,],[238,]),'EQ':([27,28,44,46,47,48,49,100,105,106,109,143,176,179,180,183,185,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,151,-86,151,-91,-90,-89,-87,-88,]),'EFF':([90,92,171,173,],[93,93,-12,-13,]),'IF':([97,115,116,117,118,119,121,122,123,125,126,127,132,134,168,169,188,197,198,209,216,220,221,222,224,225,227,229,234,235,237,239,241,],[129,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,129,-40,-37,-53,129,-54,-64,-42,-49,-63,-62,-51,-50,-48,129,-46,-57,-47,-55,-52,129,-56,]),'AND':([27,28,44,46,47,48,49,99,100,101,103,105,106,107,108,109,142,143,154,170,172,175,176,177,178,179,180,181,182,183,184,185,186,194,207,],[-97,-98,-83,-81,-80,-84,-82,137,-82,-14,-23,-85,-15,-16,-22,-86,137,-15,-20,137,137,-21,-91,-26,-29,-90,-89,-27,-28,-87,-24,-88,-25,137,-17,]),'MAP':([5,8,11,12,19,23,38,40,43,52,55,62,84,],[16,16,16,16,16,16,-72,-74,-65,-78,-73,-79,-75,]),'UPDATE':([97,115,116,117,118,119,121,122,123,125,126,127,132,134,168,169,188,197,198,209,216,220,221,222,224,225,227,229,234,235,237,239,241,],[131,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,131,-40,-37,-53,131,-54,-64,-42,-49,-63,-62,-51,-50,-48,131,-46,-57,-47,-55,-52,131,-56,]),'ISEMPTY':([95,104,137,139,162,],[102,102,102,102,102,]),'FALSE':([37,53,95,104,110,112,137,139,144,145,146,147,148,149,150,151,152,153,155,162,166,167,211,219,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'INT':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[17,17,17,17,17,17,17,-72,-74,-65,-78,-73,-79,-75,]),'FLOAT':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[18,18,18,18,18,18,18,-72,-74,-65,-78,-73,-79,-75,]),'DONEFLAG':([95,104,137,139,157,162,],[108,108,108,108,191,108,]),'LEQ':([27,28,44,46,47,48,49,100,105,106,109,143,176,179,180,183,185,],[-97,-98,-83,-81,-80,-84,-82,-82,-85,148,-86,148,-91,-90,-89,-87,-88,]),'MW':([3,7,],[6,-2,]),'BOOL':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[20,20,20,20,20,20,20,-72,-74,-65,-78,-73,-79,-75,]),'INUM':([37,53,95,104,110,112,137,139,144,145,146,147,148,149,150,151,152,153,155,162,166,167,211,219,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'NOT':([95,104,137,139,162,],[110,110,110,110,110,]),'SHARED':([5,8,11,12,19,23,38,40,43,52,55,62,84,],[21,21,21,21,21,21,-72,-74,-65,-78,-73,-79,-75,]),'OR':([27,28,44,46,47,48,49,99,100,101,103,105,106,107,108,109,142,143,154,170,172,175,176,177,178,179,180,181,182,183,184,185,186,194,207,],[-97,-98,-83,-81,-80,-84,-82,139,-82,-14,-23,-85,-15,-16,-22,-86,139,-15,-20,139,139,-21,-91,-26,-29,-90,-89,-27,-28,-87,-24,-88,-25,139,-17,]),'ATOMIC':([97,115,116,117,118,119,121,122,123,125,126,127,132,134,168,169,188,197,198,209,216,220,221,222,224,225,227,229,234,235,237,239,241,],[136,-35,-36,-41,-43,-45,-33,-34,-39,-44,-38,136,-40,-37,-53,136,-54,-64,-42,-49,-63,-62,-51,-50,-48,136,-46,-57,-47,-55,-52,136,-56,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([5,8,11,12,19,23,],[8,8,8,8,8,8,]),'pre':([86,88,],[90,92,]),'pgm':([0,],[1,]),'mwblock':([3,],[5,]),'agentDecl':([0,],[3,]),'cond':([95,104,137,139,162,],[99,142,170,172,194,]),'mapdecl':([5,8,11,12,19,23,],[11,11,11,11,11,11,]),'getInput':([97,127,169,225,239,],[117,117,117,117,117,]),'return':([97,127,169,225,239,],[125,125,125,125,125,]),'doreachavoid':([97,127,169,225,239,],[118,118,118,118,118,]),'event':([59,66,],[66,66,]),'getpos':([59,66,],[68,68,]),'log':([97,127,169,225,239,],[119,119,119,119,119,]),'val':([37,53,95,104,110,112,137,139,144,145,146,147,148,149,150,151,152,153,155,162,166,167,211,219,],[45,58,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'stmts':([97,127,169,225,239,],[120,160,206,232,240,]),'asgn':([97,127,169,225,239,],[121,121,121,121,121,]),'varnames':([39,56,],[51,60,]),'exit':([97,127,169,225,239,],[122,122,122,122,122,]),'rel':([95,104,137,139,162,],[101,101,101,101,101,]),'msg':([97,127,169,225,239,],[123,123,123,123,123,]),'neargs':([167,219,],[204,230,]),'type':([5,8,11,12,19,21,23,],[13,13,13,13,13,33,13,]),'events':([59,66,],[69,75,]),'eff':([90,92,],[94,96,]),'ite':([97,127,169,225,239,],[115,115,115,115,115,]),'initblock':([22,],[34,]),'robotinit':([59,66,],[64,64,]),'args':([167,],[202,]),'update':([97,127,169,225,239,],[126,126,126,126,126,]),'stmt':([97,127,169,225,239,],[127,127,127,127,127,]),'flag':([95,104,137,139,162,],[107,107,107,107,107,]),'sharedecl':([5,8,11,12,19,23,],[12,12,12,12,12,12,]),'funcCall':([97,127,166,169,225,239,],[132,132,198,132,132,132,]),'varname':([13,15,16,33,39,56,57,59,66,71,95,97,104,110,112,127,137,139,141,144,145,146,147,148,149,150,151,152,153,155,158,161,162,163,164,166,167,169,211,214,219,225,239,],[29,30,31,41,50,50,61,63,63,79,109,133,109,109,109,133,109,109,174,109,109,109,109,109,109,109,109,109,109,109,192,193,109,195,196,199,109,133,109,226,109,133,133,]),'remove':([97,127,169,225,239,],[134,134,134,134,134,]),'enumdecl':([5,8,11,12,19,23,],[19,19,19,19,19,19,]),'empty':([5,8,11,12,19,23,59,66,97,127,167,169,225,239,],[14,14,14,14,14,14,70,70,124,124,205,124,124,124,]),'expr':([95,104,110,112,137,139,144,145,146,147,148,149,150,151,152,153,155,162,166,167,211,219,],[106,143,154,156,106,106,177,178,179,180,181,182,183,184,185,186,187,106,200,203,223,203,]),'decls':([5,8,11,12,19,23,],[22,24,25,26,32,36,]),'atomic':([97,127,169,225,239,],[116,116,116,116,116,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pgm","S'",1,None,None,None),
  ('pgm -> agentDecl mwblock decls initblock','pgm',4,'p_pgm','parser.py',20),
  ('agentDecl -> AGENT BR CID','agentDecl',3,'p_agentDecl','parser.py',32),
  ('initblock -> INIT LPAREN RPAREN LCURLY events RCURLY','initblock',6,'p_initblock','parser.py',36),
  ('events -> event events','events',2,'p_events','parser.py',41),
  ('events -> empty','events',1,'p_events','parser.py',42),
  ('event -> robotinit','event',1,'p_event','parser.py',54),
  ('event -> getpos SEMI','event',2,'p_event','parser.py',55),
  ('event -> varname LPAREN RPAREN LCURLY pre eff RCURLY','event',7,'p_event','parser.py',56),
  ('event -> EXIT LPAREN RPAREN LCURLY pre eff RCURLY','event',7,'p_event','parser.py',57),
  ('getpos -> varname EQLS GETMYPOS LPAREN RPAREN','getpos',5,'p_getpos','parser.py',70),
  ('robotinit -> ROBOT LPAREN RPAREN SEMI','robotinit',4,'p_robotinit','parser.py',74),
  ('pre -> PRE LPAREN cond RPAREN SEMI','pre',5,'p_pre','parser.py',78),
  ('pre -> PRE LPAREN TRUE RPAREN SEMI','pre',5,'p_pre','parser.py',79),
  ('cond -> rel','cond',1,'p_cond','parser.py',86),
  ('cond -> expr','cond',1,'p_cond','parser.py',87),
  ('cond -> flag','cond',1,'p_cond','parser.py',88),
  ('cond -> ISEMPTY LPAREN varname RPAREN','cond',4,'p_cond','parser.py',89),
  ('cond -> cond AND cond','cond',3,'p_cond','parser.py',90),
  ('cond -> cond OR cond','cond',3,'p_cond','parser.py',91),
  ('cond -> NOT expr','cond',2,'p_cond','parser.py',92),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond','parser.py',93),
  ('flag -> DONEFLAG','flag',1,'p_flag','parser.py',107),
  ('flag -> FAILFLAG','flag',1,'p_flag','parser.py',108),
  ('rel -> expr EQ expr','rel',3,'p_rel','parser.py',112),
  ('rel -> expr NEQ expr','rel',3,'p_rel','parser.py',113),
  ('rel -> expr GEQ expr','rel',3,'p_rel','parser.py',114),
  ('rel -> expr LEQ expr','rel',3,'p_rel','parser.py',115),
  ('rel -> expr GE expr','rel',3,'p_rel','parser.py',116),
  ('rel -> expr LE expr','rel',3,'p_rel','parser.py',117),
  ('eff -> EFF LCURLY stmts RCURLY','eff',4,'p_eff','parser.py',122),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parser.py',127),
  ('stmts -> empty','stmts',1,'p_stmts','parser.py',128),
  ('stmt -> asgn','stmt',1,'p_stmt','parser.py',139),
  ('stmt -> exit','stmt',1,'p_stmt','parser.py',140),
  ('stmt -> ite','stmt',1,'p_stmt','parser.py',141),
  ('stmt -> atomic','stmt',1,'p_stmt','parser.py',142),
  ('stmt -> remove','stmt',1,'p_stmt','parser.py',143),
  ('stmt -> update','stmt',1,'p_stmt','parser.py',144),
  ('stmt -> msg','stmt',1,'p_stmt','parser.py',145),
  ('stmt -> funcCall','stmt',1,'p_stmt','parser.py',146),
  ('stmt -> getInput','stmt',1,'p_stmt','parser.py',147),
  ('stmt -> varname EQLS funcCall','stmt',3,'p_stmt','parser.py',148),
  ('stmt -> doreachavoid','stmt',1,'p_stmt','parser.py',149),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',150),
  ('stmt -> log','stmt',1,'p_stmt','parser.py',151),
  ('update -> UPDATE LPAREN varname RPAREN SEMI','update',5,'p_update','parser.py',162),
  ('getInput -> varname EQLS GETINPUT LPAREN RPAREN SEMI','getInput',6,'p_getInput','parser.py',167),
  ('msg -> MSG LPAREN varname RPAREN SEMI','msg',5,'p_msg','parser.py',171),
  ('log -> LOG LPAREN RPAREN SEMI','log',4,'p_log','parser.py',176),
  ('log -> LOG LPAREN DONEFLAG RPAREN SEMI','log',5,'p_log','parser.py',177),
  ('log -> LOG LPAREN FAILFLAG RPAREN SEMI','log',5,'p_log','parser.py',178),
  ('remove -> REMOVE LPAREN varname COMMA varname RPAREN SEMI','remove',7,'p_remove','parser.py',186),
  ('exit -> EXIT SEMI','exit',2,'p_exit','parser.py',192),
  ('return -> RETURN expr SEMI','return',3,'p_return','parser.py',196),
  ('doreachavoid -> DOREACHAVOID LPAREN varname COMMA expr RPAREN SEMI','doreachavoid',7,'p_callreachavoid','parser.py',199),
  ('ite -> IF LPAREN cond RPAREN LCURLY stmts RCURLY ELSE LCURLY stmts RCURLY','ite',11,'p_ite','parser.py',205),
  ('funcCall -> varname LPAREN args RPAREN SEMI','funcCall',5,'p_funcCall','parser.py',209),
  ('args -> empty','args',1,'p_args','parser.py',213),
  ('args -> neargs','args',1,'p_args','parser.py',214),
  ('neargs -> expr','neargs',1,'p_neargs','parser.py',220),
  ('neargs -> expr COMMA neargs','neargs',3,'p_neargs','parser.py',221),
  ('atomic -> ATOMIC LCURLY stmts RCURLY','atomic',4,'p_atomic','parser.py',232),
  ('asgn -> varname EQLS expr SEMI','asgn',4,'p_asgn','parser.py',242),
  ('asgn -> varname INCR SEMI','asgn',3,'p_asgn','parser.py',243),
  ('mwblock -> MW LCURLY decls RCURLY','mwblock',4,'p_mwblock','parser.py',253),
  ('decls -> decl decls','decls',2,'p_decls','parser.py',264),
  ('decls -> sharedecl decls','decls',2,'p_decls','parser.py',265),
  ('decls -> enumdecl decls','decls',2,'p_decls','parser.py',266),
  ('decls -> mapdecl decls','decls',2,'p_decls','parser.py',267),
  ('decls -> empty','decls',1,'p_decls','parser.py',268),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',280),
  ('decl -> type varname SEMI','decl',3,'p_decl','parser.py',285),
  ('decl -> type varname EQLS val SEMI','decl',5,'p_decl','parser.py',286),
  ('mapdecl -> MAP varname SEMI','mapdecl',3,'p_mapdecl','parser.py',297),
  ('enumdecl -> ENUM varname LCURLY varnames RCURLY varname EQLS varname SEMI','enumdecl',9,'p_enumdecl','parser.py',301),
  ('varnames -> varname COMMA varnames','varnames',3,'p_varnames','parser.py',310),
  ('varnames -> varname','varnames',1,'p_varnames','parser.py',311),
  ('sharedecl -> SHARED type varname SEMI','sharedecl',4,'p_sharedecl','parser.py',321),
  ('sharedecl -> SHARED type varname EQLS val SEMI','sharedecl',6,'p_sharedecl','parser.py',322),
  ('val -> INUM','val',1,'p_val','parser.py',334),
  ('val -> FNUM','val',1,'p_val','parser.py',335),
  ('val -> TRUE','val',1,'p_val','parser.py',336),
  ('val -> FALSE','val',1,'p_val','parser.py',337),
  ('val -> NULL','val',1,'p_val','parser.py',338),
  ('expr -> val','expr',1,'p_expr','parser.py',350),
  ('expr -> varname','expr',1,'p_expr','parser.py',351),
  ('expr -> expr PLUS expr','expr',3,'p_expr','parser.py',352),
  ('expr -> expr MINUS expr','expr',3,'p_expr','parser.py',353),
  ('expr -> expr TIMES expr','expr',3,'p_expr','parser.py',354),
  ('expr -> expr BY expr','expr',3,'p_expr','parser.py',355),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','parser.py',356),
  ('type -> INT','type',1,'p_type','parser.py',369),
  ('type -> FLOAT','type',1,'p_type','parser.py',370),
  ('type -> BOOL','type',1,'p_type','parser.py',371),
  ('type -> ITEMPOSITION','type',1,'p_type','parser.py',372),
  ('type -> OBSTACLELIST','type',1,'p_type','parser.py',373),
  ('varname -> LID','varname',1,'p_varname','parser.py',380),
  ('varname -> CID','varname',1,'p_varname','parser.py',381),
]
